name: Deploy Auth Service

on:
  push:
    branches:
      - main
    paths:
      - "packages/auth-service/**"

defaults:
  run:
    working-directory: packages/auth-service

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: yarn install

      - name: Generate API documentation
        run: yarn gen:all

      - name: Build the project
        run: yarn build

      - name: Archive Production Artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: packages/auth-service/build

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Get the Production Artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: packages/auth-service/build

      - name: Ensure target directory exists
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            mkdir -p /home/ubuntu
            chown ubuntu:ubuntu /home/ubuntu

      - name: Copy files to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          source: "packages/auth-service/build/*"
          target: "/home/ubuntu"

      - name: Create .env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            cat <<EOF > /home/ubuntu/apps/auth-service/build/configs/.env
            NODE_ENV=${{ secrets.NODE_ENV }}
            PORT=${{ secrets.PORT }}
            COOKIE_SECRET_KEY_ONE=${{ secrets.COOKIE_SECRET_KEY_ONE }}
            COOKIE_SECRET_KEY_TWO=${{ secrets.COOKIE_SECRET_KEY_TWO }}
            CLIENT_URL=${{ secrets.CLIENT_URL }}
            LOG_LEVEL=${{ secrets.LOG_LEVEL }}
            RABBITMQ_ENDPOINT=${{ secrets.RABBITMQ_ENDPOINT }}
            USER_SERVICE_URL=${{ secrets.USER_SERVICE_URL }}
            AUTH_SERVICE_URL=${{ secrets.AUTH_SERVICE_URL }}
            COMPANY_SERVICE_URL=${{ secrets.COMPANY_SERVICE_URL}}
            API_GATEWAY=${{ secrets.API_GATEWAY }}
            JWT_EXPIRES_IN=${{ secrets.JWT_EXPIRES_IN }}
            EOF

      - name: Start
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_IP }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: 22
          script: |
            source /home/ubuntu/.nvm/nvm.sh
            source /home/ubuntu/.profile
            cd /home/ubuntu/packages/auth-service/build
            echo "Checking directory contents..."
            ls -alh
            yarn install
            if pm2 show auth-service > /dev/null; then
              echo "Application is running. Restarting..."
              yarn restart
            else
              echo "Application is not running. Starting..."
              yarn start
            fi



